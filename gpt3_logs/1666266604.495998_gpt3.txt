The following is an unstructured video transcript of a machine-learning lecture. Make a list of the main topics discussed in this transcript.

TRANSCRIPT:

or in a web browser, depending on what operating system and graphic drivers you're running, there are lots and lots of things met plot lip has to consider when creating a plot. So this last mile in making the plot concrete is handled by part of mad plot lip called a back end. And as you might imagine, there are lots of them. Because occasionally not everything plays to get a perfectly and something won't render a plot correctly on some combination of back end of your particular setup at home or everywhere else on a plot. And in order to avoid these frustrations, there's an approach that is pretty robust. What we do instead of displaying plots to the screen, we just save them as PNG files. And then we can look at them with whatever tool we want to. For this task, there is a high performance called back end and this is called AGG, which we see here the second line. And AGG chance for anti-grang geometry engine. And this works on every system and every platform. So it makes beautiful PNG files and is great even if you're working on a headless server and would like to generate visualizations or reports to look at somewhere else. And we've been working just these two lines at the very beginning of a python script is all we need to set up the AGG back end. Due to the quirk of the process, if you try this after importing pipeline, it will fail. After setting the back end to AGG, you can then proceed as usual and we import pipeline, we import numpy and anything else we might need. When it then comes to display a plot, you just need to save it to a file, passing in the path and the name of the new image and the safe function takes care of the rest. To keep things as clean as possible in our code example, we will usually work directly with the figure and access work to rather than using the pipeline. And the application we just use for the first two or three examples. Because it turns out, if you want to do much customization, which we will do, this makes our job a lot easier. Method lip has several ways to do most things and while this can provide convenience, it can also create a lot of confusion. So that's why I would suggest we stick with this method that most clearly reflects the underlying structure rather than the method that has the shortest code. This also gives us way fewer things to remember. Because the complexity in map of the list is there for good reason. Making attractive interactive images on every time of screen in every operating system is hard is really hard. Enabling customization for all various aesthetics and formatting requirements is also hard. And on top of that, making a simplified interface to do this complexity that doesn't scare us all the way. But still preserves the most useful functionalities even harder. So. Let's try this one out with a little more complex task. Okay. Okay, generally, you want to plot them something other than single solid single line. And here are just some examples. We can tweak first. But again, we need to set up things first. So. First thing is we select the AGG backend. And then make our relevant inputs and then we create a curve to work with. And then we use again the Lin space and the sync function to create some sample data. And then we create a new figure and access. And we are ready to work. You see it's still just a couple of lines of code. A couple of lines more, but still a couple of lines in order to do beautiful graph to visualize create amounts of data. So for starters, let's just draw a thicker line this time, something that looks like like this. Okay. And. We therefore use the line with argument. Which lets you basically set the width of your line in points just for comparison. The default value is one. So 15 is a pretty thick line as we see here. And the last thing we need to do is we save this block to a new file on our hard drive. And that's it. We are ready to go. So let's move back to spider and we'll try that one. I'm going to delete everything here and starting fresh. As I said, we need to import the backend first. So import map.lib and then match.lib.use the AGG backend. That must be the first line. Again, we as usual, we import a pipeline. And we import non-pile to get some data. So first thing again, we initialize the figure by this time we save it to fix. And second thing is we create the current access object using. He. A. Perfect. So now we need to create some data. Like we already done, we use the space function. This time. We use values all between minus six and six. And again, we want to have a lot of values. So let's say 500. And for our way values, we use the same function. Handing over our just created x values. So then like before, but it's time using a x. We call plot with our x and y values. And now we want to have a really, really thick line. So line with is at two 15. And we don't want to show it on screen, but also save it. So we use the safe. And now it's up to you where you're saving. So you see. I'd be able to see. Maybe I need to zoom in again. You see my test.py file is here. So if I want to save this figure to let's say the image folder. I can go right into that. So meaning. I do images. Sorry. And then let's say white line. And this will save it down here in this folder. All right. So. What did I do wrong? Yes. Isn't supposed to be our. Oh, man. Okay, that doesn't look too good. What's the problem? Does anybody see a mistake on making? Oh, thank you very much. Very good. Thanks. Thanks a lot. Okay. So. Are you able to replicate it? And. And save it to your. Yeah, there it is. Maybe to your hard drive. Is anybody having problems or can we move on? Okay, no problem. That's good. Don't be shy. Just tell me if it's too slow or too fast. Yeah, there's no problem. So back to the slides. What else can we customize? Yeah, for example, we can specify the color using the color or see argument. Another common manipulation is to change the style of a line from solid to dashed or maybe dotted. And you can


LIST OF MAIN TOPICS:
-


==========

-