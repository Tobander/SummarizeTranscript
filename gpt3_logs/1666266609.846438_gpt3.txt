The following is an unstructured video transcript of a machine-learning lecture of Tobias Laemmle. Write a detailed summary about the given topics.

TRANSCRIPT:

control this using the line style argument. And you can choose from I don't know, dash, dotted, dash, dotted. You can even create your own issue if you'd like to. And I'm a common trick is to put more than one line on a plot. It's very common. And luckily, this is as easy as repeatedly calling the plot function. Here in the example, every time with a slightly different Y-well, you can see the different lines that we can see the different lines. And you can do this as many times as you want. You can even have, I don't know, thousands of these graphs, it just in one single plot. Maybe you have to wait a little bit to be drawn, but it gets there eventually. And occasionally, you want to really get in control exactly how your lines look like. The styling of the tips of the lines, which are called cap style. And the bends in the lines, which are called joint style, let you do this. The solid cap style and solid joint style options in this nip of the bus. Give the varying effect seen in this figure you see here. You can also make use of the dash cap style and dash joint style with broken lines, if you want to, and they take the same set of arguments. Okay. And there are really lots and lots of out of fine details of lines you can control. You can get really, really creative here. And if you're curious, I just linked the full API documentation in this resource pages here. So if you'd like to, you can take a look at all the options that are at your hands with styling, Matrot, lead lines. So that's the first part, Matrot, the lines. I would suggest we do like a five minute. And then I'll open up some some breakout rooms where we can do a couple of exercises. I've provided all the exercises to download. So I hope you had a chance to download it otherwise. So can you send the image on which image. Matrot, which image are you referring to? I just said that you have to write the pre-code. You have to write the like a link to an image or something. I would just typing and if you can go in the code you just done. I can maybe be more. Okay. And then I'll just write the white line that part is an image not png. He may. Yeah. Okay. Sorry. It's a png and I'm saving it here in. In this image folder. Okay. Was that your question where the file is saved? The image because I don't know what to write in the part because I have nothing saved. Okay. Okay. Okay. So, yeah. If you want to save the image somewhere, you have to save your code first because otherwise. Your computer doesn't know where to save it. Just save it as a dot p y file somewhere on your heart disk. And then this line is the relative path to that code. So if you don't put images, if you just put wide line png will be saved at the exact same location as you save your python file. Okay. So that's the image we're creating with the program is that something we are uploading on the code. Exactly. If I skip this one, it will be saved in this folder here instead. So what? The bracket nothing and it will just write the link by itself. No, no, you have to have to type in the name under which this image will be saved. Okay. The name. Okay. And then the image will be saved here and that's that's what I just saved this image here for double click it. It will open up here in a. We'll serve it in the same file will I save the. No, you save it really on your hard drive. Yeah, because that's that's the idea behind it because if you want to take a look at your graph somewhere else on a different computer, different system. It will always look exactly the same. And that's why we save it as a as a file instead of showing it up on the screen because if you show it on the screen. It will look like depends on the system you're on. We don't want that people want the plot to look exactly the same no matter where we are looking at. Okay, not clear. Thank you. No problem. No problem. Okay. So does everybody have the the exercises and I have uploaded it like for all do you need want me to post them in the chat. If everybody has the exercises, I would say yeah, you can do a quick break. Whatever, how long you want to and I will split you up in the break out rooms and I would suggest to the exercises one eight to one C so three exercises. So I will go with with lines and I will come into to each group with there is any problem or if you want to show me something and then yeah, so five minutes, yeah, we will. I think we do this for 15 minutes. So we meet up close the break out rooms that quarter to four. Is that all right for everybody? Okay. So. Okay, then I will split you up into rooms and you can start at your own pace or just if you don't have the exercises or have problems just hit me up, but I will come into each room. Okay, see you in a couple minutes. you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you you we we are all right just a couple more seconds and then go back to the slides. Okay. So how did it go? Has everybody was everybody able to do the exercises or was there any major problems? Oh, everybody good? Perfect. Okay. So then let's move on to the slides again. The first part was all about styling lines. But much more often you have what we have already seen points or markers as they call them a bloodlip. And they can be styled as well. They can even be more style, which we will see. And let's do that in the second part of that. So going to share my screen again. And again, if there is any trouble with the slides or with anything I said, just hit me up in the chat. So. Alright. Everybody able to see the slides? Good. So as you can see, it's also possible to style the points or as I said, markers quite a bit. Which is which is pretty useful, especially when we have a lot, lots of data like we see in the last picture. And it's pretty


GIVEN TOPICS:

-Styling Matplotlib lines
-Using markers in Matplotlib
-Controlling the appearance of markers


DETAILED SUMMARY:


==========

In the first part of the lecture, Tobias Laemmle explains how to style Matplotlib lines. He shows how to control the line width, line style, and markers. He also demonstrates how to create multiple lines on a single plot.